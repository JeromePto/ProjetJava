class ReportingFrame
!!!158349.java!!!	ReportingFrame(inout management : ManagementInterface)
    super();
    this.management = management;
    labels = new ArrayList<>();
    bars = new ArrayList<>();
    setData();
    initComponents();
!!!158477.java!!!	setData() : void
    datas = management.getReporting();
!!!158605.java!!!	initComponents() : void
    GridBagConstraints gridBagConstraints;
    GridBagConstraints gridBagConstraints1;
    int i = 0;

    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    getContentPane().setLayout(new GridBagLayout());
    setMinimumSize(new Dimension(300, 400));

    TitleLabel = new JLabel();
    

    for (Map.Entry<String, Integer> it : datas.entrySet()) {
      labels.add(new JLabel());
      bars.add(new JProgressBar());
      gridBagConstraints = new GridBagConstraints();
      gridBagConstraints1 = new GridBagConstraints();
      labels.get(i).setText(it.getKey());
      gridBagConstraints.gridx = i;
      gridBagConstraints.gridy = 2;
      gridBagConstraints.weightx = 1.0;
      getContentPane().add(labels.get(i), gridBagConstraints);
      bars.get(i).setOrientation(JProgressBar.VERTICAL);
      bars.get(i).setMaximum(DAOFactory.getInscriptionDAO().findAll().size());
      bars.get(i).setValue(it.getValue());
      gridBagConstraints1.gridx = i;
      gridBagConstraints1.gridy = 1;
      gridBagConstraints1.weightx = 1.0;
      gridBagConstraints1.weighty = 1.0;
      gridBagConstraints1.fill = GridBagConstraints.VERTICAL;
      gridBagConstraints1.weighty = 1.0;
      getContentPane().add(bars.get(i), gridBagConstraints1);
      i++;
    }
    TitleLabel.setHorizontalAlignment(SwingConstants.CENTER);
    TitleLabel.setText("El√®ve par Niveau");
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = i;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    getContentPane().add(TitleLabel, gridBagConstraints);
    pack();
